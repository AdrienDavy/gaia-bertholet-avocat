---
import type { GetStaticPaths } from "astro";
import type { Block } from "@wp-block-tools/styles";
import BlockRenderer from "../components/BlockRenderer.astro";
import CommonHead from "../components/CommonHead.astro";
interface AstroParams {
  slug?: string;
}
const astroParams: AstroParams = Astro.params;
export async function getStaticPaths() {
  const response = await fetch(`${import.meta.env.WPGRAPHQL_URL}`, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify({
      query: `
        query AllPages {
          pages(first: 10000) {
            nodes {
              uri
            }
          }
        }
      `,
    }),
  });
  const { data } = await response.json();
  return data.pages.nodes.map((page: any) => ({
    params: { slug: page.uri === "/" ? undefined : page.uri },
  }));
}
const response = await fetch(`${import.meta.env.WPGRAPHQL_URL}`, {
  method: "POST",
  headers: {
    "Content-Type": "application/json",
  },
  body: JSON.stringify({
    query: `
    query PageQuery($uri: String!) {
      nodeByUri(uri: $uri) {
        ... on Page {
          id
          blocks
          seo {
            metaDesc
            title
          }
        }
      }
    }
    `,
    variables: {
      uri: astroParams.slug || "/",
    },
  }),
});
const { data } = await response.json();
const blocks = (data.nodeByUri?.blocks || []) as Block[];
const seo = data.nodeByUri?.seo;
---

<html lang="en">
  <CommonHead title={seo.title || ""} description={seo.metaDesc || ""} />
  <body>
    <BlockRenderer blocks={blocks} />
  </body>
</html>
