---
import { truncateText } from "../utils/truncateText";
import { formatDate } from "../utils/formatDate";
import { Image } from "astro:assets";
const response = await fetch(`${Astro.url.origin}/api/articles.json`);
const { posts } = await response.json();

interface Props {
  postsToShow?: number;
  postLayout?: "grid" | "list";
  featuredImageAlign?: string;
  addLinkToFeaturedImage?: boolean;
  textColor?: string;
}

const { postsToShow, postLayout, featuredImageAlign, textColor } = Astro.props;
---

<div
  class={`${postLayout} max-w-fit sm:flex gap-9 justify-${featuredImageAlign} text-${textColor} mx-auto justify-between pb-10`}
>
  {
    posts.slice(0, postsToShow).map((post: any) => (
      <a
        href={post.uri}
        class="bg-starlight shadow-lg hover:bg-blue-light transition-all rounded-xl hover:shadow-2xl hover:scale-[0.99]"
      >
        {!!post.featuredImage && (
          <Image
            src={post.featuredImage.node.sourceUrl}
            height={post.featuredImage.node.mediaDetails.height}
            width={post.featuredImage.node.mediaDetails.width}
            inferSize={true}
            alt={post.featuredImage.node.altText || ""}
            class="h-40 w-full object-cover rounded-t-xl"
          />
        )}
        <div class="p-6 flex flex-col items-center text-center text-blue-sky">
          <p
            class="pt-2 text-3xl"
            transition:name={`post-title-${post.databaseId}`}
          >
            <strong>{post.title}</strong>
          </p>
          <p class="pb-2 text-md">{formatDate(post.date)}</p>
          <p set:html={truncateText(post.excerpt, 50)} />
        </div>
      </a>
    ))
  }
</div>
