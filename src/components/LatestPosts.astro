---
import { truncateText } from "../utils/truncateText";
import { formatDate } from "../utils/formatDate";
import { Image } from "astro:assets";
const response = await fetch(`${Astro.url.origin}/api/articles.json`);
const { posts } = await response.json();
interface Props {
  postsToShow?: number;
  displayPostContent?: boolean;
  excerptLength?: number;
  displayPostDate?: boolean;
  postLayout?: "grid" | "list"; // Exemple de typage pour postLayout
  displayFeaturedImage?: boolean;
  featuredImageAlign?: string; // 'center', 'left', 'right', etc.
  featuredImageSizeSlug?: string; // 'large', 'medium', etc.
  addLinkToFeaturedImage?: boolean;
  align?: string; // 'wide', 'full', etc.
  // Vous pouvez également inclure des styles si nécessaire
  textColor?: string;
}

const {
  postsToShow,
  displayPostContent,
  excerptLength,
  displayPostDate,
  postLayout,
  displayFeaturedImage,
  featuredImageAlign,
  featuredImageSizeSlug,
  textColor,
} = Astro.props;
const imageSize = (imageSize: string) => {
  switch (imageSize) {
    case "large":
      let imageLargeClass = "w-[1024px] h-[1024px]";
      return imageLargeClass;
    case "medium":
      let imageMediumClass = "w-[300px] h-[300px]";
      return imageMediumClass;
    case "":
      let imageSmallClass = "w-[150px] h-[150px]";
      return imageSmallClass;
    default:
      null;
  }
};
const articleUrl = (uri: string) => `${Astro.url.origin}${uri}`;
---

<div
  class={`${postLayout} sm:flex justify-${featuredImageAlign} text-${textColor} mx-auto sm:w-8/12 justify-between pb-40`}
>
  {
    posts.slice(0, postsToShow).map((post: any) => (
      <a
        href={post.uri}
        class="bg-starlight shadow-lg hover:bg-blue-light transition-all rounded-xl hover:shadow-2xl hover:scale-[0.99]"
      >
        {!!post.featuredImage && (
          <Image
            src={post.featuredImage.node.sourceUrl}
            height={post.featuredImage.node.mediaDetails.height}
            width={post.featuredImage.node.mediaDetails.width}
            inferSize={true}
            alt={post.featuredImage.node.altText || ""}
            class="h-40 w-full object-cover rounded-t-xl"
          />
        )}
        <div class="p-6 flex flex-col items-center text-center text-blue-sky">
          <p
            class="pt-2 text-3xl"
            transition:name={`post-title-${post.databaseId}`}
          >
            <strong>{post.title}</strong>
          </p>
          <p class="pb-2 text-md">{formatDate(post.date)}</p>
          <p set:html={truncateText(post.excerpt, 50)} />
        </div>
      </a>
    ))
  }
</div>
