---
// Importations nécessaires
// import type { Post } from "../types"; // Assurez-vous d'avoir défini ce type en fonction de vos données

// Props passées au composant
type Props = {
  posts: any;
  postsToShow: number;
  displayPostContent: boolean;
  excerptLength: number;
  displayPostDate: boolean;
  displayFeaturedImage: boolean;
  addLinkToFeaturedImage: boolean;
  featuredImageAlign: string; // Exemple : 'center', 'left', 'right'
  featuredImageSizeSlug: string; // Exemple : 'large', 'medium'
  textColor: string; // Assurez-vous que cela corresponde à des classes Tailwind valides
  fontSize: string; // Idem pour la taille de police
};

const {
  posts = [],
  postsToShow = 2,
  displayPostContent = true,
  excerptLength = 10,
  displayPostDate = true,
  displayFeaturedImage = true,
  addLinkToFeaturedImage = true,
  featuredImageAlign = "center", // Cette valeur est à titre d'exemple et doit être utilisée pour styliser l'image
  featuredImageSizeSlug = "large", // Cette valeur ne sera probablement pas utilisée directement dans Tailwind mais peut influencer le style ou les classes conditionnelles
  textColor = "blue-sky",
  fontSize = "medium",
} = Astro.props;
---

<div class={`text-${textColor} text-${fontSize}`}>
  {
    posts.slice(0, postsToShow).map((post) => (
      <article>
        {displayFeaturedImage && post.featuredImage && (
          <figure class={`text-${featuredImageAlign}`}>
            <img
              src={post.featuredImage.node.sourceUrl}
              alt={post.featuredImage.node.altText}
            />
          </figure>
        )}
        <h2>{post.title}</h2>
        {displayPostDate && <time datetime={post.date}>{post.date}</time>}
        <div>
          {displayPostContent ? (
            <p>{post.content}</p>
          ) : (
            <p>{post.excerpt.substring(0, excerptLength)}...</p>
          )}
        </div>
      </article>
    ))
  }
</div>
