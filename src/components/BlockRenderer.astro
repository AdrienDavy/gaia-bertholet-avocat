---
import BlockRendererInner from "./BlockRenderer.astro";
import NavigationSubLink from "./NavigationSubLink.astro";
import Navigation from "./Navigation.astro";
import NavigationLink from "./NavigationLink.astro";
import NavigationSubmenu from "./NavigationSubmenu.astro";
import Button from "./Button.astro";
import Heading from "./Heading.astro";
import Paragraph from "./Paragraph.astro";
import Cover from "./Cover.astro";
import PostRenderer from "./PostRenderer.astro";
import ListItem from "./ListItem.astro";
import SocialLink from "./SocialLink.astro";
import CodeBlock from "./CodeBlock.astro";
import { getBlockStyling } from "@wp-block-tools/styles";
import type { Block } from "@wp-block-tools/styles";
import { Image } from "astro:assets";
import { joinClasses } from "../utils/joinClasses";
import LatestPosts from "./LatestPosts.astro";
import type { Post } from "../types.d.ts";

type Props = {
  blocks: Block[];
  posts: Post[];
  renderLatestPosts: boolean;
};

const { blocks, posts, renderLatestPosts } = Astro.props;
---

{
  blocks.map((block) => {
    const { styles, classes } = getBlockStyling(block);
    if (block.name === "core/latest-posts" && renderLatestPosts) {
      return (
        <div style={styles} class={classes}>
          <LatestPosts
            posts={posts || []}
            postsToShow={block.attributes?.postsToShow || 2}
            displayPostContent={block.attributes?.displayPostContent || true}
            excerptLength={block.attributes?.excerptLength || 30}
            displayPostDate={block.attributes?.displayPostDate || true}
            postLayout={block.attributes?.postLayout || ""}
            displayFeaturedImage={block.attributes?.displayFeaturedImage || ""}
            featuredImageAlign={block.attributes?.featuredImageAlign || ""}
            featuredImageSizeSlug={
              block.attributes?.featuredImageSizeSlug || ""
            }
            textColor={block.attributes?.textColor || ""}
          />
        </div>
      );
    }
    switch (block.name) {
      case "core/image":
        return (
          <Image
            src={block.attributes?.url}
            height={block.attributes?.height}
            width={block.attributes?.width}
            class={classes}
            style={styles}
            alt={block.attributes?.alt || ""}
          />
        );

      case "core/button":
        return (
          <Button
            classes={classes}
            styles={styles}
            url={block.attributes?.url}
            content={block.attributes?.content || ""}
          />
        );
      case "core/post-title":
      case "core/heading":
        return (
          <Heading
            level={block.attributes?.level || 2}
            classes={classes}
            styles={styles}
            content={block.attributes?.content || ""}
          />
        );
      case "core/cover":
        return (
          <Cover
            classes={classes}
            styles={styles}
            url={block.attributes?.url}
            height={block.attributes?.height}
            width={block.attributes?.width}
            dimRatio={block.attributes?.dimRatio}
            overlayColor={block.attributes?.overlayColor}
            customOverlayColor={block.attributes?.customOverlayColor}
            minHeight={block.attributes?.minHeight}
            minHeightUnit={block.attributes?.minHeightUnit}
          >
            <BlockRendererInner
              blocks={block.innerBlocks || []}
              renderLatestPosts={renderLatestPosts}
              posts={posts || []}
            />
          </Cover>
        );
      case "core/paragraph":
        return (
          <Paragraph
            classes={classes}
            styles={styles}
            content={block.attributes?.content}
          />
        );
      case "core/columns":
      case "core/column":
      case "core/post-content":
      case "core/group":
      case "core/buttons":
        return (
          <div style={styles} class={classes}>
            <BlockRendererInner
              blocks={block.innerBlocks || []}
              renderLatestPosts={renderLatestPosts}
              posts={posts || []}
            />
          </div>
        );
      case "core/list":
        return (
          <ul style={styles} class={classes}>
            <BlockRendererInner
              blocks={block.innerBlocks || []}
              renderLatestPosts={renderLatestPosts}
              posts={posts || []}
            />
          </ul>
        );
      case "core/list-item":
        return (
          <ListItem
            classes={classes}
            styles={styles}
            content={block.attributes?.content}
          />
        );

      default:
        return null;
    }
  })
}
